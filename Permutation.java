import java.util.*;public class Main {    public static void main(String [] args) {        Scanner sc = new Scanner(System.in);        int n = sc.nextInt();        ArrayList<Integer> L = new ArrayList<>();        for(int i=1;i<=n;i++) L.add(i);        Map<Integer,Integer> OPT = new HashMap<>();        StringBuilder sb = new StringBuilder();        Permutation(L,OPT,1,sb);        System.out.print(sb);    }    public static StringBuilder Permutation(ArrayList<Integer> L,Map<Integer,Integer> opt, int cnt,StringBuilder sb){        for(int i=0;i<L.size();i++){            int n = L.get(i);            opt.put(cnt,n);            ArrayList<Integer> list = Deep_Copy(L);            list.remove(list.indexOf(n));            if(list.size()>0)sb = Permutation(list,opt,cnt+1,sb);            else{                sb.append(opt.get(1));                for(int j=2;j<=opt.size();j++){                    sb.append(" "+opt.get(j));                }                sb.append("\n");            }        }        return sb;    }    public static ArrayList<Integer> Deep_Copy(ArrayList<Integer> L){        ArrayList<Integer> List = new ArrayList<>();        for(int i:L) List.add(i);        return List;    }    public static HashMap<Integer,Integer> Deep_Copy2(Map<Integer,Integer> L){        HashMap<Integer,Integer> List = new HashMap<Integer,Integer>();        for(int i:List.keySet()) List.put(i,L.get(i));        return List;    }}
import java.util.*;public class Main{    public static void main(String [] args) {        Scanner sc = new Scanner(System.in);        int n = sc.nextInt();        int q = sc.nextInt();        long ST [] = new long[2*n+1];        long num = 2;        long max = (num<<30)-1;        Arrays.fill(ST,max);        for(int i=0;i<q;i++){            int query = sc.nextInt();            int s = sc.nextInt();            int t = sc.nextInt();            if(query==0){                int x = sc.nextInt();                for(int j=s;j<=t;j++) ST=update(ST,j,x,n);            }            else System.out.println(find(ST,s,t,0,0,n,max));        }    }    /**     * @// TODO: 2020/10/05 understand this method     * @see : need to modify this code for applying this problem     * */    public static long[] update(long[] ST,int num,int x,int n){        num+=n;        ST[num] = x;        while(num>0){            num = (num)/2;            ST[num] = Math.min(ST[num*2+1],ST[num*2+2]);        }        return ST;    }    /**     * @// TODO: 2020/10/05 understand this method     * @see : need to modify this code for applying this problem     * */    public static long find(long []ST,int s,int t,int k,int l,int r, long max){        if(r<=s||t<=l)return max;        if(s<=1&&r<=t)return ST[k];        else{            long vr = find(ST,s,t,k*2+1,l,(l+r)/2,max);            long vl = find(ST,s,t,k*2+2,(l+r)/2,r,max);            return Math.min(vr,vl);        }    }}
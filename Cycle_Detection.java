import java.util.*;public class Main {    public static void main(String[] args) {        Scanner sc = new Scanner(System.in);        int V = sc.nextInt();        int E = sc.nextInt();        Map<Integer,ArrayList<Integer>> L =new HashMap<>();        for(int i=0;i<E;i++){            int s = sc.nextInt();            int t = sc.nextInt();            if(L.get(s)==null){                ArrayList<Integer> list = new ArrayList<>();                list.add(t);                L.put(s,list);            }            else L.get(s).add(t);        }        int [] used = new int[V];        int check = 0;        for(int i=0;i<V;i++){            check = DFS(L,i,new ArrayList<Integer>(),new ArrayList<>(),used);            if(check==1) break;        }        System.out.println(check);    }    public static int DFS(Map<Integer,ArrayList<Integer>> L,int now,ArrayList<Integer> go,ArrayList<Integer> back,int [] used) {        int check = 0;        go.add(now);        used[now] = 1;        if(L.get(now)!=null){            for(int i:L.get(now)){                if(go.contains(i)&&!back.contains(i)) return 1;                if(used[i]==0)check = DFS(L,i,go,back,used);                if(check==1) return check;            }        }        back.add(now);        return check;    }}